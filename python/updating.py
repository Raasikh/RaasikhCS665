# -*- coding: utf-8 -*-
"""Updating.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Wsqt75XDifHO93iM7aO93l5P_unmJmEb

Updating
"""

from flask import Flask, request, render_template_string
import pyodbc

app = Flask(__name__)

# Database connection function
def get_connection():
    return pyodbc.connect(
        'DRIVER={SQL Server};'
        'Server=LAPTOP-QOK8SQ4M\\MSSQLSERVER1;'
        'Database=ChessApp;'
        'Trusted_Connection=yes;'
    )

@app.route("/update_user", methods=["GET", "POST"])
def update_user():
    msg = ""
    if request.method == "POST":
        try:
            conn = get_connection()
            cur = conn.cursor()
            sql = """
            UPDATE Users
            SET username = ?, email = ?, password_hash = ?, elo_rating = ?
            WHERE user_id = ?
            """
            cur.execute(sql, (
                request.form["username"],
                request.form["email"],
                request.form["password_hash"],
                int(request.form["elo_rating"]),
                int(request.form["user_id"])
            ))
            conn.commit()
            msg = "✅ User updated successfully!"
        except Exception as e:
            msg = f"❌ Error: {e}"

    return render_template_string("""
    <h2>Update User</h2>
    <form method="post">
      User ID to Update: <input name="user_id"><br>
      New Username: <input name="username"><br>
      New Email: <input name="email"><br>
      New Password Hash: <input name="password_hash"><br>
      New Elo Rating: <input name="elo_rating"><br>
      <button type="submit">Update</button>
    </form>
    <p>{{ msg }}</p>
    <a href='/'>Insert User</a> | <a href='/delete_user'>Delete User</a>
    """, msg=msg)
@app.route("/update_game", methods=["GET", "POST"])
def update_game():
    msg = ""
    if request.method == "POST":
        try:
            conn = get_connection()
            cur = conn.cursor()
            sql = """
            UPDATE Games
            SET player1_id = ?, player2_id = ?, winner_id = ?, game_date = ?, game_type = ?
            WHERE game_id = ?
            """
            cur.execute(sql, (
                int(request.form["player1_id"]),
                int(request.form["player2_id"]),
                int(request.form["winner_id"]) if request.form["winner_id"] else None,
                request.form["game_date"],
                request.form["game_type"],
                int(request.form["game_id"])
            ))
            conn.commit()
            msg = "✅ Game updated successfully!"
        except Exception as e:
            msg = f"❌ Error: {e}"

    return render_template_string("""
    <h2>Update Game</h2>
    <form method="post">
      Game ID: <input name="game_id"><br>
      Player 1 ID: <input name="player1_id"><br>
      Player 2 ID: <input name="player2_id"><br>
      Winner ID (or leave blank for draw): <input name="winner_id"><br>
      Game Date (YYYY-MM-DD HH:MM): <input name="game_date"><br>
      Game Type (PVP or AI): <input name="game_type"><br>
      <button type="submit">Update</button>
    </form>
    <p>{{ msg }}</p>
    <a href='/'>← Home</a>
    """, msg=msg)
@app.route("/update_ai_game", methods=["GET", "POST"])
def update_ai_game():
    msg = ""
    if request.method == "POST":
        try:
            conn = get_connection()
            cur = conn.cursor()
            sql = """
            UPDATE AI_Games
            SET user_id = ?, ai_difficulty = ?, result = ?, game_date = ?
            WHERE ai_game_id = ?
            """
            cur.execute(sql, (
                int(request.form["user_id"]),
                request.form["ai_difficulty"],
                request.form["result"],
                request.form["game_date"],
                int(request.form["ai_game_id"])
            ))
            conn.commit()
            msg = "✅ AI Game updated."
        except Exception as e:
            msg = f"❌ Error: {e}"

    return render_template_string("""
    <h2>Update AI Game</h2>
    <form method="post">
      AI Game ID: <input name="ai_game_id"><br>
      User ID: <input name="user_id"><br>
      AI Difficulty: <input name="ai_difficulty"><br>
      Result: <input name="result"><br>
      Game Date (YYYY-MM-DD HH:MM): <input name="game_date"><br>
      <button type="submit">Update</button>
    </form>
    <p>{{ msg }}</p>
    <a href='/'>← Home</a>
    """, msg=msg)
@app.route("/update_leaderboard", methods=["GET", "POST"])
def update_leaderboard():
    msg = ""
    if request.method == "POST":
        try:
            conn = get_connection()
            cur = conn.cursor()
            sql = """
            UPDATE Leaderboard
            SET user_id = ?, elo_rating = ?, last_game_date = ?
            WHERE rank = ?
            """
            cur.execute(sql, (
                int(request.form["user_id"]),
                int(request.form["elo_rating"]),
                request.form["last_game_date"],
                int(request.form["rank"])
            ))
            conn.commit()
            msg = "✅ Leaderboard entry updated."
        except Exception as e:
            msg = f"❌ Error: {e}"

    return render_template_string("""
    <h2>Update Leaderboard</h2>
    <form method="post">
      Rank ID: <input name="rank"><br>
      User ID: <input name="user_id"><br>
      Elo Rating: <input name="elo_rating"><br>
      Last Game Date (YYYY-MM-DD HH:MM): <input name="last_game_date"><br>
      <button type="submit">Update</button>
    </form>
    <p>{{ msg }}</p>
    <a href='/'>← Home</a>
    """, msg=msg)

@app.route("/")
def home():
    return render_template_string("""
    <h2>Welcome to ChessApp Portal</h2>
    <ul>
        <li><a href="/analytics">Go to Analytics</a></li>
        <li><a href="/insert_user">Insert User</a></li>
        <li><a href="/update_user">Update User</a></li>
        <li><a href="/delete_user">Delete User</a></li>
    </ul>
    """)

app.run(port=5000)